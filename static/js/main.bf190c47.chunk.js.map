{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/card/card.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","href","target","rel","id","Card","props","code","src","icon","alt","date","temp","humidity","key","API","searchCity","city","unit","axios","get","searchLatLon","lat","lon","App","useState","getCity","setCity","getUnit","setUnit","getStor","setStor","name","dt","main","weather","description","coord","getData","setData","current","uvi","daily","max","min","getDat2","setDat2","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","searches","findWeather","units","forceSearch","then","res","data","includes","searchesArray","push","catch","err","console","log","displayUnits","answer","speed","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","day","getDate","onSubmit","event","preventDefault","type","onChange","cityOnly","value","replace","toLowerCase","split","placeholder","onClick","map","item","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAceA,MAVf,WAGI,OACI,qBAAKC,UAAU,SAAf,SACI,sD,MCMGC,MAXf,WAGI,OACI,sBAAKD,UAAU,SAAf,UACI,2CAAa,mBAAGE,KAAK,uBAAuBC,OAAO,SAASC,IAAI,sBAAnD,sBACb,mBAAGC,GAAG,QAAQH,KAAK,yDAAyDC,OAAO,SAASC,IAAI,sBAAhG,wB,MCgCGE,MAtCf,SAAcC,GACV,IAAoBC,EAwBpB,OACI,sBAAKR,UAAU,OAAf,UACI,qBACIS,IAAG,2CAAsCF,EAAMG,KAA5C,WACHC,KA5BQH,EA4BSD,EAAMG,KA3BlB,QAATF,GAA2B,QAATA,EACZ,yBACU,QAATA,GAA2B,QAATA,EACnB,0BACU,QAATA,GAA2B,QAATA,EACnB,gCACU,QAATA,GAA2B,QAATA,EACnB,6BACU,QAATA,GAA2B,QAATA,EACnB,2BACU,QAATA,GAA2B,QAATA,EACnB,oBACU,QAATA,GAA2B,QAATA,EACnB,4BACU,QAATA,GAA2B,QAATA,EACnB,oBACU,QAATA,GAA2B,QAATA,EACnB,oBAEA,kBAUN,mBAAGR,UAAU,YAAb,SAA2BO,EAAMK,OACjC,uCAAUL,EAAMM,QAChB,2CAAcN,EAAMO,gB,gBCnC1BC,EAAM,mCAWGC,EATH,CACRC,WAAY,SAACC,EAAMC,GACf,OAAOC,IAAMC,IAAN,4DAA+DH,EAA/D,kBAA6EC,EAA7E,kBAA2FJ,KAEtGO,aAAc,SAACC,EAAKC,EAAKL,GACrB,OAAOC,IAAMC,IAAN,8DAAiEE,EAAjE,gBAA4EC,EAA5E,kBAAyFL,EAAzF,0CAA+HJ,M,MCyR/HU,MA1Rf,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2BF,mBAAS,YAApC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA2BJ,mBAAS,IAApC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA2BN,mBAAS,CAClCO,KAAM,gBACNC,GAAI,EACJC,KAAM,CACJtB,KAAM,GACNC,SAAU,IAEZsB,QAAS,CAAC,CACRC,YAAa,GACb3B,KAAM,UACNL,GAAI,GACJ8B,KAAM,KAERG,MAAO,CACLf,IAAK,EACLC,IAAK,KAfT,mBAAOe,EAAP,KAAgBC,EAAhB,KAkBA,EAA2Bd,mBAAS,CAClCe,QAAS,CAAEC,IAAK,GAChBC,MAAO,CACL,CACET,GAAI,EACJrB,KAAM,CACJ+B,IAAK,IACLC,IAAK,GAEP/B,SAAU,EACVsB,QAAS,CAAC,CACRC,YAAa,GACb3B,KAAM,UACNL,GAAI,GACJ8B,KAAM,SAdd,mBAAOW,EAAP,KAAgBC,EAAhB,KAoBAC,qBAAU,WAGHC,aAAaC,QAAQ,cACxBD,aAAaE,QAAQ,YAAaC,KAAKC,UAAU,kBAEnDzB,EAAQwB,KAAKE,MAAML,aAAaC,QAAQ,eAGxC,IAAIK,EAAWH,KAAKE,MAAML,aAAaC,QAAQ,oBAC/ClB,EAAQuB,KAEP,IAEHP,qBAAU,WAERQ,EAAYJ,KAAKE,MAAML,aAAaC,QAAQ,cAAerB,GAGrDoB,aAAaC,QAAQ,oBACzBD,aAAaE,QAAQ,kBAAmBC,KAAKC,UAAU,CAAC,qBAGzD,CAACxB,IAMJ,IA2FgBa,EAcIlC,EAzGdgD,EAAc,SAACtC,EAAMuC,GAA4B,IAArBC,EAAoB,uDAAN,EAC1CxC,IAASwC,GAEX1C,EAAIC,WAAWC,EAAMuC,GAAOE,MAAK,SAAAC,GAO/B,GALa,KAAT1C,GACF+B,aAAaE,QAAQ,YAAaC,KAAKC,UAAUO,EAAIC,KAAK5B,QAItDmB,KAAKE,MAAML,aAAaC,QAAQ,oBAAoBY,SAASF,EAAIC,KAAK5B,MAAQ,CAClF,IAAI8B,EAAgBX,KAAKE,MAAML,aAAaC,QAAQ,oBACpDa,EAAcC,KAAKJ,EAAIC,KAAK5B,MAC5BgB,aAAaE,QAAQ,kBAAmBC,KAAKC,UAAUU,IACvD/B,EAAQ+B,GAKV,OAFAvB,EAAQoB,EAAIC,MAELD,EAAIC,QAEVF,MAAK,SAAAE,GAGN7C,EAAIM,aAAJ,UAAoBuC,EAAKvB,MAAMf,KAA/B,UAAyCsC,EAAKvB,MAAMd,KAAOiC,GAAOE,MAAK,SAAAC,GAErEb,EAAQa,EAAIC,SAEXI,OAAM,SAAAC,GACPC,QAAQC,IAAIF,SAGbD,OAAM,SAAAC,GACPC,QAAQC,IAAR,WAAgBlD,EAAhB,yBAA6CgD,OA8B7CG,EAAe,WACnB,IAAIC,EAAS,CAAEzD,KAAM,GAAI0D,MAAO,IAWhC,MATgB,aAAZ1C,GACFyC,EAAOzD,KAAO,QACdyD,EAAOC,MAAQ,OACM,WAAZ1C,IACTyC,EAAOzD,KAAO,QACdyD,EAAOC,MAAQ,OAIVD,GAGHE,EAAgB,SAAAC,GACpB,IAAIC,EAAI,IAAIC,KAAsB,IAAjBF,GAEbG,EAAOF,EAAEG,cACTC,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExEJ,EAAEK,YACjBC,EAAMN,EAAEO,UAKZ,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,aAA2BJ,IAyC7B,OACE,sBAAKvE,GAAG,aAAR,UACE,cAAC,EAAD,IACA,qBAAKL,UAAU,OAAf,SACE,sBAAKA,UAAU,eAAf,UAEE,sBAAKA,UAAU,MAAf,UAEE,+CAEA,sBAAKA,UAAU,mBAAf,UACE,uBAAMkF,SA9FC,SAAAC,GACjBA,EAAMC,iBACFzD,IAAYyB,KAAKE,MAAML,aAAaC,QAAQ,eAC9CM,EAAY7B,EAASE,IA2Fb,UACE,uBACEwD,KAAK,OACLC,SAxGE,SAAAH,GAGhB,IAAII,EAAWJ,EAAMhF,OAAOqF,MAAMC,QAAQ,IAAK,KAAKC,cAAcC,MAAM,KACxE/D,EAAQ2D,EAAS,KAqGHK,YAAY,kBAEd,uBACEP,KAAK,SACLG,MAAM,cAGV,wBAAQxF,UAAU,QAAQqF,KAAK,SAASQ,QAlGhC,WAEhB/D,EADc,aAAZD,EACM,SAEA,aA8FA,6BAGF,gDAEA,qBAAK7B,UAAU,oBAAf,SACG+B,GACCA,EAAQ+D,KAAI,SAAAC,GACV,OACE,wBAEEF,QAAS,WACHE,IAAS3C,KAAKE,MAAML,aAAaC,QAAQ,eAC3CM,EAAYuC,EAAMlE,IAJxB,SAOEkE,GANKA,WAajB,sBAAK/F,UAAU,OAAf,UAEE,sBAAKA,UAAS,mBAvEJQ,EAuE6B+B,EAAQH,QAAQ,GAAG1B,KAtErD,QAATF,GAA2B,QAATA,EACd,YACY,QAATA,GAA2B,QAATA,EACrB,aACY,QAATA,GAA2B,QAATA,EACrB,mBACY,QAATA,GAA2B,QAATA,EACrB,gBACY,QAATA,GAA2B,QAATA,EACrB,cACY,QAATA,GAA2B,QAATA,EACrB,OACY,QAATA,GAA2B,QAATA,EACrB,eACY,QAATA,GAA2B,QAATA,EACrB,OACY,QAATA,GAA2B,QAATA,EACrB,OAEA,YAmDA,UACE,6BAAK+B,EAAQN,OACb,mBAAGjC,UAAU,YAAb,SAA2BwE,EAAcjC,EAAQL,MACjD,8CAAiBK,EAAQJ,KAAKtB,KAA9B,IAAqCwD,IAAexD,QACpD,2CAAc0B,EAAQJ,KAAKrB,SAA3B,OACA,2CAAa,sBAAMd,UAAS,oBA1FxB0C,EA0F8CI,EAAQL,QAAQC,IAzFxEA,GAAO,EACF,SACEA,GAAO,EACT,YACEA,GAAO,EACT,UACEA,GAAO,GACT,aAEA,qBAgFc,SAA8DI,EAAQL,QAAQC,YAG7F,gDAEA,qBAAK1C,UAAU,WAAf,SACG8C,GACCA,EAAQH,MAAMqD,MAAM,EAAG,GAAGF,KAAI,SAAAC,GAC5B,OACE,cAAC,EAAD,CAEEnF,KAAM4D,EAAcuB,EAAK7D,IACzBrB,KAAI,UAAKkF,EAAKlF,KAAK+B,IAAf,YAAsByB,IAAexD,MACzCC,SAAQ,UAAKiF,EAAKjF,SAAV,KACRJ,KAAMqF,EAAK3D,QAAQ,GAAG1B,MALxB,mBACmBqF,EAAK7D,kBAetC,cAAC,EAAD,QCjRS+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf190c47.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './header.css';\r\n\r\nfunction Header() {\r\n\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>Weather Dashboard</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport './footer.css';\r\n\r\nfunction Footer() {\r\n\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <p>Made with <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noreferrer noopener\">React</a></p>\r\n            <a id=\"githb\" href=\"https://github.com/markkhoo/50-Weather-Dashboard-REACT\" target=\"_blank\" rel=\"noreferrer noopener\">GitHub</a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nimport './card.css';\r\n\r\nfunction Card(props) {\r\n    const iconAltText = code => {\r\n        if (code === \"01d\" || code === \"01n\") {\r\n            return `clear sky weather icon`\r\n        } else if (code === \"02d\" || code === \"02n\") {\r\n            return `few clouds weather icon`\r\n        } else if (code === \"03d\" || code === \"03n\") {\r\n            return `scattered clouds weather icon`\r\n        } else if (code === \"04d\" || code === \"04n\") {\r\n            return `broken clouds weather icon`\r\n        } else if (code === \"09d\" || code === \"09n\") {\r\n            return `shower rain weather icon`\r\n        } else if (code === \"10d\" || code === \"10n\") {\r\n            return `rain weather icon`\r\n        } else if (code === \"11d\" || code === \"11n\") {\r\n            return `thunderstorm weather icon`\r\n        } else if (code === \"13d\" || code === \"13n\") {\r\n            return `snow weather icon`\r\n        } else if (code === \"50d\" || code === \"50n\") {\r\n            return `mist weather icon`\r\n        } else {\r\n            return `weather icon`\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"card\" >\r\n            <img \r\n                src={`http://openweathermap.org/img/wn/${props.icon}@2x.png`}\r\n                alt={iconAltText(props.icon)}\r\n            />\r\n            <p className=\"bold-font\" >{props.date}</p>\r\n            <p>Temp: {props.temp}</p>\r\n            <p>Humidity: {props.humidity}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;","import axios from \"axios\";\r\n\r\nconst key = '22bb6e2db366aab8539ac22df7b32d3a';\r\n\r\nconst API = {\r\n    searchCity: (city, unit) => {\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${key}`)\r\n    },\r\n    searchLatLon: (lat, lon, unit) => {\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=${unit}&exclude=minutely,hourly&appid=${key}`)\r\n    }\r\n};\r\n\r\nexport default API;","import { React, useState, useEffect } from \"react\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport Card from \"./components/card/card\";\nimport API from \"./utils/API\";\n\nimport './App.css';\n\nfunction App() {\n  const [getCity, setCity] = useState(\"\");\n  const [getUnit, setUnit] = useState(\"imperial\");\n  const [getStor, setStor] = useState([]);\n  const [getData, setData] = useState({\n    name: \"San Francisco\",\n    dt: 0,\n    main: {\n      temp: \"\",\n      humidity: \"\"\n    },\n    weather: [{\n      description: \"\",\n      icon: \"loading\",\n      id: \"\",\n      main: \"\"\n    }],\n    coord: {\n      lat: 0,\n      lon: 0\n    }\n  });\n  const [getDat2, setDat2] = useState({\n    current: { uvi: 0 },\n    daily: [\n      {\n        dt: 0,\n        temp: {\n          max: 100,\n          min: 0\n        },\n        humidity: 0,\n        weather: [{\n          description: \"\",\n          icon: \"loading\",\n          id: \"\",\n          main: \"\"\n        }]\n      }\n    ]\n  });\n\n  useEffect(() => {\n\n    // Fills in city in Local Storage if none exists\n    if (!localStorage.getItem(\"last_city\")) {\n      localStorage.setItem(\"last_city\", JSON.stringify(\"San Francisco\"));\n    };\n    setCity(JSON.parse(localStorage.getItem(\"last_city\")));\n\n    // Initiallizes the recent cities buttons\n    let searches = JSON.parse(localStorage.getItem(\"stored_searches\"));\n    setStor(searches);\n\n  }, []);\n\n  useEffect(() => {\n\n    findWeather(JSON.parse(localStorage.getItem(\"last_city\")), getUnit);\n\n    // Adds Recent Search if empty\n    if (!(localStorage.getItem(\"stored_searches\"))) {\n      localStorage.setItem(\"stored_searches\", JSON.stringify([\"San Francisco\"]));\n    };\n\n  }, [getUnit]);\n\n  // useEffect(() => {\n  //   console.log(getData, timeConverter(getData.dt), getDat2)\n  // }, [getData, getDat2])\n\n  const findWeather = (city, units, forceSearch = 0) => {\n    if (city && !forceSearch) {\n\n      API.searchCity(city, units).then(res => {\n        // Store last search at valid search event\n        if (city !== \"\") {\n          localStorage.setItem(\"last_city\", JSON.stringify(res.data.name));\n        };\n\n        // Stores Recent Searches \n        if (!(JSON.parse(localStorage.getItem(\"stored_searches\")).includes(res.data.name))) {\n          let searchesArray = JSON.parse(localStorage.getItem(\"stored_searches\"));\n          searchesArray.push(res.data.name);\n          localStorage.setItem(\"stored_searches\", JSON.stringify(searchesArray));\n          setStor(searchesArray);\n        };\n\n        setData(res.data);\n\n        return res.data\n\n      }).then(data => {\n\n        // Borderline Callback Hell but only one time should be okay right?\n        API.searchLatLon(`${data.coord.lat}`, `${data.coord.lon}`, units).then(res => {\n\n          setDat2(res.data)\n\n        }).catch(err => {\n          console.log(err)\n        })\n\n      }).catch(err => {\n        console.log(`\"${city}\" is an invalid input`, err);\n      });\n\n    };\n  };\n\n  const writeCity = event => {\n    // This prevents queries by state and country.\n    // Currently this site is not set up to search by state or country\n    let cityOnly = event.target.value.replace(\" \", \"+\").toLowerCase().split(\",\");\n    setCity(cityOnly[0]);\n  };\n\n  const submitCity = event => {\n    event.preventDefault();\n    if (getCity !== JSON.parse(localStorage.getItem(\"last_city\"))) {\n      findWeather(getCity, getUnit);\n    }\n  };\n\n  const changeUnits = () => {\n    if (getUnit === \"imperial\") {\n      setUnit(\"metric\");\n    } else if (getUnit === \"metric\") {\n      setUnit(\"imperial\");\n    } else {\n      setUnit(\"imperial\");\n    };\n  };\n\n  const displayUnits = () => {\n    let answer = { temp: \"\", speed: \"\" };\n\n    if (getUnit === \"imperial\") {\n      answer.temp = \"°F\";\n      answer.speed = \"mph\"\n    } else if (getUnit === \"metric\") {\n      answer.temp = \"°C\";\n      answer.speed = \"m/s\"\n    };\n    // See https://openweathermap.org/current for Condition Codes\n\n    return answer\n  };\n\n  const timeConverter = UNIX_timestamp => {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var day = a.getDate();\n    // var hour = a.getHours();\n    // var min = a.getMinutes();\n    // var sec = a.getSeconds();\n    // var time = day + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\n    return `${month} ${day}, ${year}`;\n  }\n\n  const colorUV = uvi => {\n    if (uvi <= 2) {\n      return \"UV-low\"\n    } else if (uvi <= 5) {\n      return \"UV-medium\"\n    } else if (uvi <= 7) {\n      return \"UV-high\"\n    } else if (uvi <= 10) {\n      return \"UV-extreme\"\n    } else {\n      return \"UV-indeterminate\"\n    }\n  };\n\n  const imagePicker = code => {\n    if (code === \"01d\" || code === \"01n\") {\n      return `clear_sky`\n    } else if (code === \"02d\" || code === \"02n\") {\n      return `few_clouds`\n    } else if (code === \"03d\" || code === \"03n\") {\n      return `scattered_clouds`\n    } else if (code === \"04d\" || code === \"04n\") {\n      return `broken_clouds`\n    } else if (code === \"09d\" || code === \"09n\") {\n      return `shower_rain`\n    } else if (code === \"10d\" || code === \"10n\") {\n      return `rain`\n    } else if (code === \"11d\" || code === \"11n\") {\n      return `thunderstorm`\n    } else if (code === \"13d\" || code === \"13n\") {\n      return `snow`\n    } else if (code === \"50d\" || code === \"50n\") {\n      return `mist`\n    } else {\n      return `loading`\n    }\n  }\n\n  return (\n    <div id=\"root-child\">\n      <Header />\n      <div className=\"main\">\n        <div className=\"container-xl\">\n\n          <div className=\"nav\">\n\n            <p>Search by City</p>\n\n            <div className=\"search-container\">\n              <form onSubmit={submitCity} >\n                <input\n                  type=\"text\"\n                  onChange={writeCity}\n                  placeholder=\"San Francisco\"\n                />\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                />\n              </form>\n              <button className=\"units\" type=\"button\" onClick={changeUnits}>Change Units</button>\n            </div>\n\n            <p>Recent Searches</p>\n\n            <div className=\"history-container\">\n              {getStor &&\n                getStor.map(item => {\n                  return (\n                    <button\n                      key={item}\n                      onClick={() => {\n                        if (item !== JSON.parse(localStorage.getItem(\"last_city\"))) {\n                          findWeather(item, getUnit);\n                        }\n                      }}\n                    >{item}</button>\n                  )\n                })}\n            </div>\n\n          </div>\n\n          <div className=\"info\">\n\n            <div className={`current ${imagePicker(getData.weather[0].icon)}`}>\n              <h1>{getData.name}</h1>\n              <p className=\"bold-font\" >{timeConverter(getData.dt)}</p>\n              <p>Tempurature: {getData.main.temp} {displayUnits().temp}</p>\n              <p>Humidity: {getData.main.humidity}%</p>\n              <p>UV Index: <span className={`uv-block ${colorUV(getDat2.current.uvi)}`}>{getDat2.current.uvi}</span></p>\n            </div>\n\n            <h2>5 Day Forecast</h2>\n\n            <div className=\"forecast\">\n              {getDat2 &&\n                getDat2.daily.slice(1, 6).map(item => {\n                  return (\n                    <Card\n                      key={`key-date-${item.dt}`}\n                      date={timeConverter(item.dt)}\n                      temp={`${item.temp.max} ${displayUnits().temp}`}\n                      humidity={`${item.humidity}%`}\n                      icon={item.weather[0].icon}\n                    />\n                  )\n                })\n              }\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}